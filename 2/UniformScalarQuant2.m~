clear all
close all
clc

load assignment2.mat

in = [-6:.01:6]'; %Signal must be a columns
nbits_tab = 1:10;
OUT = zeros(length(nbits_tab), length(in));

m_tab=[0 1.5]; %Offset of the quantizer recosntruction levels =0 ->midrise quantizer =delta/2 ->midtread
D = zeros(length(nbits_tab),length(m_tab));
PSNR = zeros(length(nbits_tab),length(m_tab));
for im = 
m = m_tab(1);

for i_bits = 1:length(nbits_tab)
n_bits = nbits_tab(i_bits);
fprintf('%d bits\n', n_bits);
xmax = 4;
% n_bits = 2;
en_plots = 0; %Enables plot in functions

[ idx ] = sq_enc(in, n_bits, xmax, m, en_plots);

OUT(i_bits,:) = sq_dec(idx, n_bits, xmax, m);
end
IN = ones(length(nbits_tab),1)*in';
D = 1/length(in)*sum( (IN-OUT).^2,2);
PSNR = 10*log10(6./D(:));

figure,
plot(nbits_tab, PSNR);
xlabel('Rate (bits)'); ylabel('PSNR (dB)');
 title(['USQ: Rate vs PSNR, m = ' num2str(m)]);

% 
% figure, plot(in,outq);
% title(['Uniform Scalar Quantizer. ' num2str(n_bits) ' bits, m= ' num2str(m) ', xmax= ' num2str(xmax) ]);
% xlabel('Input');ylabel('Output');
